// This example demonstrates the use of the object anyQueue, which can be used to store and process a queue that can contain any type of value
global argsG

verboseT := ifSwitchExists(argsG, "-verbose")

b1 := newEx("anyQueue", 6)

if verboseT {
	plo(b1)
}

plt(b1)

pl("b1: %v", b1)

pl("[%v] %v -- %v", -1, b1, b1)

plo(b1.Size())

for j := 0; j < b1.Size(); j++ {
	item1 := b1.Get(j)
	prf(" %v", item1)
}

pl(" First: %#v Last: %#v", b1.Get(), b1.Get(-1))

pl("List: %v %v", b1.GetList(), b1.GetList())

pln("remove 0:", b1.Remove(0))

pln("remove last:", b1.Remove(b1.Size()))

pln("remove 3:", b1.Remove(3))

for i := 20000; i < 20022; i++ {
	b1.Push(int(i))

	pl("[%v] %v %v", i, b1, b1)

	for j := 0; j < b1.Size(); j++ {
		item1 := b1.Get(j)
		prf(" %v", item1)
	}

	pl(" F: %v L: %v", b1.Get(), b1.Get(-1))

	pl("List: %v %v", b1.GetList(), b1.GetList())

}

b1.Insert(0, byte(100))

if verboseT {
	pl("-1 [%v] %v %v %v", 999, b1, b1, b1.GetInfo())
}

for j := 0; j < b1.Size(); j++ {
	item1 := b1.Get(j)
	prf(" %v", item1)
}

pl(" F: %v L: %v", b1.Get(), b1.Get(-1))

b1.Insert(3, float(103))

if verboseT {
	pl("-2 [%v] %v %v %v", 999, b1, b1, b1.GetInfo())
}

for j := 0; j < b1.Size(); j++ {
	item1 := b1.Get(j)
	prf(" %v", item1)
}

pl(" F: %v L: %v", b1.Get(), b1.Get(-1))

b1.Insert(b1.Size()-1, byte(109))

if verboseT {
	pl("-3 [%v] %v %v %v", 999, b1, b1, b1.GetInfo())
}

for j := 0; j < b1.Size(); j++ {
	item1 := b1.Get(j)
	prf(" %v", item1)
}

pl(" F: %v L: %v", b1.Get(), b1.Get(-1))

pl("List: %v %v", b1.GetList(), b1.GetList())

// remove 0
b1.Remove(0)

if verboseT {
	pl("remove0 [%v] %v %v %v", 999, b1, b1, b1.GetInfo())
}

for j := 0; j < b1.Size(); j++ {
	item1 := b1.Get(j)
	prf(" %v", item1)
}

pl(" F: %v L: %v", b1.Get(), b1.Get(-1))

pl("List: %v %v", b1.GetList(), b1.GetList())

// remove last
b1.Remove(b1.Size() - 1)

if verboseT {
	pl("removeLast [%v] %v %v %v", 999, b1, b1, b1.GetInfo())
}

for j := 0; j < b1.Size(); j++ {
	item1 := b1.Get(j)
	prf(" %v", item1)
}

pl(" F: %v L: %v", b1.Get(), b1.Get(-1))

pl("List: %v %v", b1.GetList(), b1.GetList())

// remove 2
b1.Remove(2)

if verboseT {
	pl("remove2 [%v] %v %v %v", 999, b1, b1, b1.GetInfo())
}

for j := 0; j < b1.Size(); j++ {
	item1 := b1.Get(j)
	prf(" %v", item1)
}

pl(" F: %v L: %v", b1.Get(), b1.Get(-1))

pl("List: %v %v", b1.GetList(), b1.GetList())

cnt1 := 0

for {
	a1 := b1.Pick()

	if isErrX(a1) {
		exit()
	}

	cnt1++

	pl("got %v", a1)

	pl("[%v] %v S: %v", cnt1, b1, b1.Size())

}