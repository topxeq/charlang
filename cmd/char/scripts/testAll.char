var rs

rs = systemCmd("char", "-gopath", "basic.char")

testByText(rs, "3.4000000000000004\n", getSeq(), "basic.char")

rs = systemCmd("char", "-gopath", "mutex.char")

testByText(rs, "(objectRef)<objectRef:5>\n(int)5\nresult: 15005\n", getSeq(), "mutex.char")

rs = systemCmd("char", "-gopath", "seq.char")

testByText(rs, "(seq)0\n(int)1\n(int)2\n(seq)0\n(int)1\n(int)2\n(seq)0\n(int)1\n(int)2\n(int)3\n(int)3\n(seq)1\n(int)2\n(int)2\n", getSeq(), "seq.char")

rs = systemCmd("char", "-gopath", "mutableString.char")

testByText(rs, "(mutableString)abc\n(mutableString)def\n(mutableString)\n(string)ghj\n(string)klm\ns2 after f1:\n(mutableString)qwe\ns2 after f2:\n(mutableString)  rty\n(int)123\n\"  rty -- example  \"\n\"rty -- example\"\nf3 returns: true\ns2 after f3: \"y -- example\"\ntrim ple: y -- exam\ns2 now: \"y -- exam\"\n", getSeq(), "mutableString.char")

rs = systemCmd("char", "-gopath", "method1.char")

testByText(rs, "(bool)true\n(bool)false\n", getSeq(), "method1.char")

rs = systemCmd("char", "-gopath", "method2.char")

testByText(rs, "(bool)true\n(bool)false\n", getSeq(), "method2.char")

rs = systemCmd("char", "-gopath", "member.char")

rs = regReplace(rs, `detail: \{0x\w+? `, "")

testByText(rs, "(bool)true\nfailed set member of b1: unsupported action(set member)\n(undefined)undefined\ntype name of buf1: stringBuilder\n(string)abc123\nstringBuilder [97 98 99 49 50 51]}\n(string)abc123\n(string)simple text\nfailed to call method(invalidFunc) of buf1: Error: unknown method: invalidFunc\n", getSeq(), "member.char")

rs = systemCmd("char", "-gopath", "trace1.char")

testByStartsWith(rs, "\n ----- \nBytecode\nModules:0\nConstants:\n   0: 1|int\n   1: 2.3|float\nParams:0 Variadic:false Locals:3\nInstructions:\n0000 CONSTANT        0\n0003 DEFINELOCAL     0\n0005 CONSTANT        1\n0008 DEFINELOCAL     1\n0010 GETBUILTIN", getSeq(), "trace1.char")

testByContains(rs, "\"versionG\": \"", getSeq(), "trace1.char")

testByContains(rs, "CurFunc \n&charlang.CompiledFunction{NumParams:0, NumLocals:3, Instructions:[]uint8{", getSeq(), "trace1.char")

testByEndsWith(rs, ", Variadic:false, Free:[]*charlang.ObjectPtr(nil), SourceMap:map[int]int{0:6, 3:1, 5:14, 8:9, 10:30, 12:30, 15:21, 17:45, 19:49, 21:45, 24:45, 25:0}, Members:map[string]charlang.Object(nil)}\n ----- \nCurInstr \n\"12 2 CALL\"\n ----- \nLocals \n[1 2.3 undefined]\n ----- \n\n", getSeq(), "trace1.char")

rs = systemCmd("char", "-gopath", "new.char")

testByText(rs, "(objectRef)<objectRef:true>\n(bool)true\nb1 after f1:\n(objectRef)<objectRef:false>\n(bool)false\nb1 after f2:\n(objectRef)<objectRef:true>\n(bool)true\n(mutableString)abc\n(mutableString)def\ns1 after f3:\n(mutableString)qwe\n", getSeq(), "new.char")

rs = systemCmd("char", "-gopath", "ref.char")

testByText(rs, "(string)  1.2 \n(string)  1.2 \n(mutableString)  1.2 \n(mutableString)bbb\n(array)[1, 2, \"a\"]\n(array)[1, \"cc\", \"a\"]\n{\"field1\":1,\"field2\":\"23.8\"}\n{\"field1\":true,\"field3\":\"dd\"}\n(objectRef)<objectRef:368.9>\n(float)368.9\n(objectRef)<objectRef:21.7>\n(float)21.7\n", getSeq(), "ref.char")

rs = systemCmd("char", "-gopath", "number.char")

testByText(rs, "(int)1\n(int)-5\n(uint)18446744073709551611\n(uint)5\n(uint)5\n(float)2.3\n(byte)8\n(char)69\nE\n", getSeq(), "number.char")

rs = systemCmd("char", "-gopath", "customMembers1.char")

testByText(rs, "s1: abc\n(string)v1\n(string)v2\n(charlang.String)\"\"\n(undefined)undefined\ns1 now: abc\n(string)v1\n(string)v2\n(charlang.String)\"\"\n(string)a test info\n", getSeq(), "customMembers1.char")

rs = systemCmd("char", "-gopath", "customMembers2.char")

testByText(rs, "s1(mutableString): \"abc1\"\n(string)v1\n(string)v2\n(charlang.String)\"\"\n(undefined)undefined\ns1 now: \"abc2\"\n(string)v1\n(string)v2\n(charlang.String)\"\"\n(string)a test info\n", getSeq(), "customMembers2.char")

rs = systemCmd("char", "-gopath", "make.char")

testByText(rs, "(int)0\nv2: abc123.6\n(any)abc123.6\n(any)true\n", getSeq(), "make.char")

rs = systemCmd("char", "-gopath", "getNamedValue.char")

//testByReg(rs, `(?sm)(string)\"2023-09-08 15:51:14\"\n(string)\"20230908155114\"\n`, getSeq(), "getNamedValue.char")
// testByReg(rs, `(?sm)\(string\)\"\d{4}\-\d{2}\"\n\(string\)\"\d{14}\"\n`, getSeq(), "getNamedValue.char")
testByReg(rs, `(?sm)\(string\)\d{4}\-\d{2}\-\d{2} \d{2}\:\d{2}\:\d{2}\n\(string\)\d{14}\n`, getSeq(), "getNamedValue.char")

rs = systemCmd("char", "-gopath", "newEx.char")

testByText(rs, "r1 type: any\nr1 type wrapped in any: *tk.StringRing\n(array)[\"abc\", \"123\"]\n", getSeq(), "newEx.char")

rs = systemCmd("char", "-gopath", "var.char")

testByText(rs, "1\nabc\ntrue\n", getSeq(), "var.char")

rs = systemCmd("char", "-gopath", "exit.char")

testByText(rs, "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n", getSeq(), "exit.char")

rs = systemCmd("char", "-gopath", "typeCodeAndName.char")

testByText(rs, "typeCode of a: 107\ntypeName of a: int\ntypeCode of b: 105\ntypeName of b: string\ntypeCode of c: 131\ntypeName of c: array\ntypeCode of d: 131\ntypeName of d: array\n", getSeq(), "typeCodeAndName.char")

rs = systemCmd("char", "-gopath", "anonymousFunc.char")

testByStartsWith(rs, "Hi! Nice to see you.\n3\n8\n17", getSeq(), "anonymousFunc.char")

rs = systemCmd("char", "-gopath", "param.char")

testByReg(rs, `(?sm)args.*?\narg 1: param\.char.*`, getSeq(), "param.char")

rs = systemCmd("char", "-gopath", "char.char")

testByText(rs, "type of c1: char\ninternal type of c1: int32\nvalue of c1: 97\ncharacter of c1: a\n\ntype of c2: char\ninternal type of c2: int32\nvalue of c2: 22825\ncharacter of c2: 天\n", getSeq(), "char.char")

rs = systemCmd("char", "-gopath", "compile.char")

testByText(rs, "r1=3.3\nv0=true\nv1=value1\nvargs=[1 2 3a]\n(charlang.String)\"abctruevalue13.3\"\n", getSeq(), "compile.char")

rs = systemCmd("char", "-gopath", "funcParam.char")

testByText(rs, "[1, 2, \"a\"]\n[1, \"cc\", \"a\"]\n{\"field1\":1,\"field2\":\"23.8\"}\n{\"field1\":true,\"field2\":\"23.8\",\"field3\":\"dd\"}\n", getSeq(), "funcParam.char")

rs = systemCmd("char", "-gopath", "json.char")

testByReg(rs, `(?sm)jsonStrT: {\"name\": \"Peter\", \"age\": 19, \"身高\": 175, \"father\": .*?}\n\n---\n\nresult: .*?\nname: Peter\nage: 19\nfather: .*?\n\n---\n\nappleT: map\[.*?\]\n\n---\n\nJSON: {\n  \"Color\": \"Red红的\",\n  \"Ingredients\": \[\n  {\n    \"Amount\": 0.3,\n    \"Name\": \"Protein\"\n  },\n  {\n    \"Amount\": 10.4,\n    \"Name\": \"Sugar糖分\"\n  }\n\],\n  \"Type\": \"apple\",\n  \"Weight重量\": 10,\n  \"canEat\": true\n}\n`, getSeq(), "json.char")

rs = systemCmd("char", "-gopath", "threadRun1.char")

testByText(rs, "(thread) v0=6\n(main) a=15\n(thread) v0=7\n(main) a=25\n(thread) v0=8\n(main) a=35\n(thread) v0=9\n(thread) v0=10\n(main) a=45\n(main) a=55\n", getSeq(), "threadRun1.char")

rs = systemCmd("char", "-gopath", "threadRun2.char")

testByEndsWith(rs, "(thread) v0=6\n(main) a=16\n(thread) v0=17\n(main) a=27\n(thread) v0=28\n(main) a=38\n(thread) v0=39\n(thread) v0=40\n(main) a=50\n(main) a=60\n", getSeq(), "threadRun2.char")


